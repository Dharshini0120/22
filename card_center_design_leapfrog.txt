"use client"
import React, { useState, useEffect, useCallback } from 'react'
import {
  Button,
  Typography,
  Box,
  Card,
  CardContent,
  TextField,
  Avatar,
  IconButton,
  InputAdornment
} from '@mui/material'
import {
  Person as PersonIcon,
  Email as EmailIcon,
  Phone as PhoneIcon,
  CameraAlt as CameraIcon
} from '@mui/icons-material'
import { useDispatch, useSelector } from 'react-redux'
import { RootState, AppDispatch } from '../../store/store'
import { getUser } from '../../store/userSlice'
import DashboardLayout from '../../components/layout/DashboardLayout'
import FacilityInformationCard from '../../components/FacilityInformationCard'
import ProfileEditDialog from '../../components/ProfileEditDialog'
import { withPageLoader } from "@frontend/shared-ui"

function Settings() {
    const dispatch = useDispatch<AppDispatch>();
    const { userDetail, loading, error } = useSelector((state: RootState) => state.user);

    const [formData, setFormData] = useState({
        fullName: '',
        email: '',
        phoneNumber: '',
        facilityName: '',
        facilityType: '',
        county: '',
        state: '',
        serviceLines: '',
        numberOfBeds: ''
    })

    const [editDialogOpen, setEditDialogOpen] = useState(false)

    const populateFormFromUserData = useCallback(() => {
        setFormData({
            fullName: userDetail.fullName || userDetail.full_name || '',
            email: userDetail.email || '',
            phoneNumber: userDetail.phoneNumber || '',
            facilityName: userDetail.facilityName || '',
            facilityType: typeof userDetail.facilityType === 'object' 
                ? userDetail.facilityType?.name || '' 
                : userDetail.facilityType || '',
            county: userDetail.county || '',
            state: userDetail.state || '',
            serviceLines: userDetail.serviceLines 
                ? userDetail.serviceLines
                    .map(item => typeof item === 'object' ? item.name : item)
                    .filter(Boolean)
                    .join(', ')
                : '',
            numberOfBeds: userDetail.numberOfLicensedBeds?.toString() || ''
        });
    }, [userDetail]);

    // Load user data on component mount
    useEffect(() => {
        // Check if user data exists in Redux
        if (!userDetail.isAuthenticated || !userDetail.fullName) {
            // If no user data, call getUser API
            console.log('🔍 No user data found, fetching user data...');
            dispatch(getUser());
        } else {
            // If user data exists, populate the form
            console.log('✅ User data found, populating form...');
            populateFormFromUserData();
        }
    }, [dispatch, userDetail.isAuthenticated, userDetail.fullName, populateFormFromUserData]);

    // Update form data when user data changes
    useEffect(() => {
        if (userDetail.isAuthenticated && userDetail.fullName) {
            populateFormFromUserData();
        }
    }, [userDetail.isAuthenticated, userDetail.fullName, populateFormFromUserData]);



    const handleEditProfile = () => {
        setEditDialogOpen(true)
    }

    const handleUpdateProfile = (updatedData: typeof formData) => {
        setFormData(updatedData)
        setEditDialogOpen(false)
        // Here you would typically make an API call to update the profile
        console.log('Profile updated:', updatedData)
    }

    // Show loading state while fetching user data
    if (loading) {
        return (
            <DashboardLayout>
                <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '400px' }}>
                    <Typography>Loading user data...</Typography>
                </Box>
            </DashboardLayout>
        );
    }

    // Show error state if there's an error
    if (error) {
        return (
            <DashboardLayout>
                <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '400px' }}>
                    <Typography color="error">Error loading user data: {error}</Typography>
                </Box>
            </DashboardLayout>
        );
    }

    return (
        <DashboardLayout>
            <Box>
                {/* Header */}
                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 4 }}>
                    <Box>
                        <Typography
                            variant="h5"
                            fontWeight={600}
                            fontFamily={'var(--font-inter), sans-serif'}
                            sx={{ color: '#1a1a1a', mb: 0.5 }}
                        >
                            Account Settings
                        </Typography>
                        <Typography
                            variant="subtitle1"
                            color="#6c757d"
                            fontFamily={'var(--font-inter), sans-serif'}
                            sx={{ fontSize: '16px' }}
                        >
                            View and edit your information & settings
                        </Typography>
                    </Box>
                    <Button
                        variant="contained"
                        size="large"
                        onClick={handleEditProfile}
                        sx={{
                            background: 'linear-gradient(90deg, #408bff 0%, #3a7de6 100%)',
                            textTransform: 'none',
                            letterSpacing: '0.5px',
                            fontWeight: 500,
                            fontFamily: 'var(--font-inter), sans-serif',
                            borderRadius: '8px',
                            padding: '10px 24px',
                            boxShadow: '0 2px 8px rgba(64, 139, 255, 0.3)',
                            '&:hover': {
                                background: 'linear-gradient(90deg, #3a7de6 0%, #2968d4 100%)',
                                boxShadow: '0 4px 12px rgba(64, 139, 255, 0.4)',
                            }
                        }}
                    >
                        Edit Profile
                    </Button>
                </Box>

                {/* Main Cards - Personal Information and Facility Information */}
                <Box sx={{
                    display: 'flex',
                    flexDirection: 'column',
                    gap: 3,
                    maxWidth: '800px',
                    mx: 'auto',
                    mb: 5
                }}>
                    {/* Personal Information Card */}
                    <Box>
                        <Card
                            sx={{
                                borderRadius: '12px',
                                border: '1px solid #e4e5e7',
                                boxShadow: '0 2px 8px rgba(0,0,0,0.04)',
                                height: 'fit-content'
                            }}
                        >
                            <CardContent sx={{ p: 3 }}>
                                <Typography
                                    variant="h6"
                                    fontWeight={600}
                                    fontFamily={'var(--font-inter), sans-serif'}
                                    sx={{ mb: 3, color: '#1a1a1a' }}
                                >
                                    Personal Information
                                </Typography>

                                <Box sx={{ display: 'flex', gap: 3, alignItems: 'center' }}>
                                    {/* Left side - Form fields */}
                                    <Box sx={{ flex: 1, maxWidth: '70%' }}>
                                        <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2.5 }}>
                                            {/* Full Name */}
                                            <TextField
                                                name="fullName"
                                                value={formData.fullName}
                                                label="Full Name"
                                                fullWidth
                                                InputProps={{
                                                    readOnly: true,
                                                    startAdornment: (
                                                        <InputAdornment position="start" sx={{ pr: 0.5 }}>
                                                            <PersonIcon sx={{ color: '#9ca3af', fontSize: '20px' }} />
                                                            <Box sx={{ height: 28, width: 1.3, bgcolor: '#b0b0b0', ml: 1 }} />
                                                        </InputAdornment>
                                                    ),
                                                }}
                                                InputLabelProps={{
                                                    shrink: true,
                                                    sx: {
                                                        fontSize: '0.95rem',
                                                        color: '#9ca3af',
                                                        '&.Mui-focused': { color: '#9ca3af' },
                                                        transform: 'translate(14px, 16px) scale(1)',
                                                        '&.MuiInputLabel-shrink': {
                                                            transform: 'translate(14px, -8px) scale(0.85)',
                                                            backgroundColor: '#fff',
                                                            px: 0.5,
                                                        },
                                                    },
                                                }}
                                                sx={{
                                                    '& .MuiOutlinedInput-root': {
                                                        borderRadius: '12px',
                                                        backgroundColor: '#fff',
                                                        fontSize: '1rem',
                                                        minHeight: '56px',
                                                        '& fieldset': { borderColor: '#a8a8a8' },
                                                        '&:hover fieldset': { borderColor: '#808080' },
                                                        '&.Mui-focused fieldset': { borderColor: '#4285F4' },
                                                    },
                                                    '& .MuiOutlinedInput-input': { padding: '14px 10px' },
                                                }}
                                            />

                                            {/* Email Address */}
                                            <TextField
                                                name="email"
                                                value={formData.email}
                                                label="Email Address"
                                                fullWidth
                                                InputProps={{
                                                    readOnly: true,
                                                    startAdornment: (
                                                        <InputAdornment position="start" sx={{ pr: 0.5 }}>
                                                            <EmailIcon sx={{ color: '#9ca3af', fontSize: '20px' }} />
                                                            <Box sx={{ height: 28, width: 1.3, bgcolor: '#b0b0b0', ml: 1 }} />
                                                        </InputAdornment>
                                                    ),
                                                }}
                                                InputLabelProps={{
                                                    shrink: true,
                                                    sx: {
                                                        fontSize: '0.95rem',
                                                        color: '#9ca3af',
                                                        '&.Mui-focused': { color: '#9ca3af' },
                                                        transform: 'translate(14px, 16px) scale(1)',
                                                        '&.MuiInputLabel-shrink': {
                                                            transform: 'translate(14px, -8px) scale(0.85)',
                                                            backgroundColor: '#fff',
                                                            px: 0.5,
                                                        },
                                                    },
                                                }}
                                                sx={{
                                                    '& .MuiOutlinedInput-root': {
                                                        borderRadius: '12px',
                                                        backgroundColor: '#fff',
                                                        fontSize: '1rem',
                                                        minHeight: '56px',
                                                        '& fieldset': { borderColor: '#a8a8a8' },
                                                        '&:hover fieldset': { borderColor: '#808080' },
                                                        '&.Mui-focused fieldset': { borderColor: '#4285F4' },
                                                    },
                                                    '& .MuiOutlinedInput-input': { padding: '14px 10px' },
                                                }}
                                            />

                                            {/* Phone Number */}
                                            <TextField
                                                name="phoneNumber"
                                                value={formData.phoneNumber}
                                                label="Phone Number"
                                                fullWidth
                                                InputProps={{
                                                    readOnly: true,
                                                    startAdornment: (
                                                        <InputAdornment position="start" sx={{ pr: 0.5 }}>
                                                            <PhoneIcon sx={{ color: '#9ca3af', fontSize: '20px' }} />
                                                            <Box sx={{ height: 28, width: 1.3, bgcolor: '#b0b0b0', ml: 1 }} />
                                                        </InputAdornment>
                                                    ),
                                                }}
                                                InputLabelProps={{
                                                    shrink: true,
                                                    sx: {
                                                        fontSize: '0.95rem',
                                                        color: '#9ca3af',
                                                        '&.Mui-focused': { color: '#9ca3af' },
                                                        transform: 'translate(14px, 16px) scale(1)',
                                                        '&.MuiInputLabel-shrink': {
                                                            transform: 'translate(14px, -8px) scale(0.85)',
                                                            backgroundColor: '#fff',
                                                            px: 0.5,
                                                        },
                                                    },
                                                }}
                                                sx={{
                                                    '& .MuiOutlinedInput-root': {
                                                        borderRadius: '12px',
                                                        backgroundColor: '#fff',
                                                        fontSize: '1rem',
                                                        minHeight: '56px',
                                                        '& fieldset': { borderColor: '#a8a8a8' },
                                                        '&:hover fieldset': { borderColor: '#808080' },
                                                        '&.Mui-focused fieldset': { borderColor: '#4285F4' },
                                                    },
                                                    '& .MuiOutlinedInput-input': { padding: '14px 10px' },
                                                }}
                                            />
                                        </Box>
                                    </Box>

                                    {/* Right side - Profile Image */}
                                    <Box sx={{ flex: 1, maxWidth: '30%', display: 'flex', justifyContent: 'center', border: '1px solid #e4e5e7', borderRadius: '12px', py:3 }}>
                                        <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'flex-start' }}>
                                            <Box sx={{ position: 'relative' }}>
                                                <Avatar
                                                    sx={{
                                                        width: 150,
                                                        height: 150,
                                                        borderRadius: '12px',
                                                        backgroundColor: '#f3f4f6'
                                                    }}
                                                    variant="rounded"
                                                    src="/api/placeholder/100/100" // Placeholder for profile image
                                                />
                                                <IconButton
                                                    sx={{
                                                        position: 'absolute',
                                                        bottom: -8,
                                                        right: -8,
                                                        backgroundColor: '#408bff',
                                                        color: 'white',
                                                        width: 32,
                                                        height: 32,
                                                        '&:hover': {
                                                            backgroundColor: '#3a7de6'
                                                        },
                                                        boxShadow: '0 2px 8px rgba(64, 139, 255, 0.3)'
                                                    }}
                                                >
                                                    <CameraIcon sx={{ fontSize: '16px' }} />
                                                </IconButton>
                                            </Box>
                                        </Box>
                                    </Box>
                                </Box>
                            </CardContent>
                        </Card>
                    </Box>

                    {/* Facility Information Card */}
                    <FacilityInformationCard formData={formData} />
                </Box>


            </Box>

            {/* Profile Edit Dialog */}
            <ProfileEditDialog
                open={editDialogOpen}
                onClose={() => setEditDialogOpen(false)}
                currentData={formData}
                onUpdate={handleUpdateProfile}
            />
        </DashboardLayout>
    )
}

export default withPageLoader(Settings);